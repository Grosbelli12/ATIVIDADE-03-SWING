import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class Cadastro_de_Contatos {
    private JPanel cadastrodecontatos;
    private JTextField txtnome;
    private JTextField txttelefone;
    private JTextField txtemail;
    private JButton btnadicionarcontato;
    private JButton btnlimpar;
    private JList liscontatos;
    private JLabel lblnomes;
    private JLabel lbltelefone;
    private JLabel lblemail;
    private JTextArea txtAstatus;

    private String nomes = "";
    private String telefones = "";
    private String email = "";
    private String informacoes = ""; // informacoes variavel que adiciona as outras tres variaves nome telefone e e-mail tudo em uma.
    private ArrayList contatos = new ArrayList();
    private int i = 0;

    // ele permite que eu selecone os dados dentro da Jlist e também armazena os dados e gerencia eles
    DefaultListModel<String> contatinhos = new DefaultListModel<>();

    public Cadastro_de_Contatos() {
        liscontatos.setModel(contatinhos);
        btnadicionarcontato.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {

                nomes = txtnome.getText();
                telefones = txttelefone.getText();
                email = txtemail.getText();

                if (nomes.isEmpty() || telefones.isEmpty() || email.isEmpty()) {
                    txtAstatus.setText("Preencha todos os campos acima"); // txtAstatus é o local feio que mostra as strings
                } else {
                    i++;
                    informacoes = +i + "° Contato Nome: " + nomes + ", Telefone:  " + telefones + " ,E-mail: " + email;
                    contatos.add(informacoes);
                    contatinhos.addElement(informacoes);
                }
            }
        });
        btnlimpar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // excluir para pegar a posião dos elementps
                int excluir = liscontatos.getSelectedIndex(); // quando eu clicar no qual eu desejo excluir ele irá retornar a posição dele

                // fazer a verificão pois se não selecionar nada não terá posição assim não excluirá nada e pedira para selecionar algo
                if (excluir != -1) {
                    contatos.remove(excluir); // excluir o que foi selecionado
                    contatinhos.removeElement(excluir); // usam o excluir para remover pelo indice
                    txtAstatus.setText("Contato removido com sucesso!");
                } else {
                    txtAstatus.setText("Selecione um contato para remover.");
                }
            }
        });

    }


    public static void main(String[] args) {
        JFrame frame = new JFrame("Cadastro de Contatos");
        frame.setContentPane(new Cadastro_de_Contatos().cadastrodecontatos);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /** Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        cadastrodecontatos = new JPanel();
        cadastrodecontatos.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(6, 3, new Insets(0, 0, 0, 0), -1, -1));
        cadastrodecontatos.setBorder(BorderFactory.createTitledBorder(null, "", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        txtnome = new JTextField();
        cadastrodecontatos.add(txtnome, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        txttelefone = new JTextField();
        cadastrodecontatos.add(txttelefone, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        txtemail = new JTextField();
        cadastrodecontatos.add(txtemail, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        btnadicionarcontato = new JButton();
        btnadicionarcontato.setText("Adicionar contato");
        cadastrodecontatos.add(btnadicionarcontato, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnlimpar = new JButton();
        btnlimpar.setText("Excluir contato");
        cadastrodecontatos.add(btnlimpar, new com.intellij.uiDesigner.core.GridConstraints(4, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        liscontatos = new JList();
        cadastrodecontatos.add(liscontatos, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(100, 50), null, 0, false));
        lblnomes = new JLabel();
        lblnomes.setText("Nome:");
        cadastrodecontatos.add(lblnomes, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lbltelefone = new JLabel();
        lbltelefone.setText("Telefone:");
        cadastrodecontatos.add(lbltelefone, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lblemail = new JLabel();
        lblemail.setText("E-mail:");
        cadastrodecontatos.add(lblemail, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        txtAstatus = new JTextArea();
        cadastrodecontatos.add(txtAstatus, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /** @noinspection ALL */
    public JComponent $$$getRootComponent$$$() {
        return cadastrodecontatos;
    }
}

